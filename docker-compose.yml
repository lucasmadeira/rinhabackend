version: '3.5'
services:
  api1: # API - Instância 01
    image: lucasmadeira/rinhabackend
    container_name: api1
    hostname: api1
    environment:
      REDIS_URL: redis
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pessoas
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - db
      - redis
    expose:
      - "8080"
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.425'
          memory: '0.6GB'
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://api1:8080/actuator/health || exit 1" ]
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 5s


  api2: # API - Instância 02
    image: lucasmadeira/rinhabackend
    container_name: api2
    hostname: api2
    environment:
      REDIS_URL: redis
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pessoas
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - db
      - redis
    expose:
      - "8080"
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.425'
          memory: '0.6GB'
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://api2:8080/actuator/health || exit 1" ]
      interval: 10s
      retries: 60
      start_period: 20s
      timeout: 5s

  nginx: # Load Balancer
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    ports:
      - "9999:9999"
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.4GB'


  db: # Banco de dados
    image: postgres
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pessoas
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.45'
          memory: '0.8GB'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres pessoas" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    container_name: redis
    hostname: redis
    ports:
      - "6380:6379"
#    command: redis-server --save "" --appendonly no --maxclients 20000
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'

volumes:
  postgres-data:
networks:
  rinhabackend-network:
    driver: bridge
