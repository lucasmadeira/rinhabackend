version: '3.5'
services:
  api1: # API - Instância 01
    image: lucasmadeira/rinhabackend
    container_name: api1
    hostname: api1
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pessoas
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - db
    expose:
      - "8080"
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '960MB'


  api2: # API - Instância 02
    image: lucasmadeira/rinhabackend
    container_name: api2
    hostname: api2
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pessoas
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - db
    expose:
      - "8080"
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '960MB'

  nginx: # Load Balancer
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '128MB'


  db: # Banco de dados
    image: postgres
    container_name: db
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: pessoas
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rinhabackend-network
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1GB'

volumes:
  postgres-data:
networks:
  rinhabackend-network:
    driver: bridge